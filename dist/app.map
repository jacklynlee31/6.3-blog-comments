{"version":3,"sources":["js/setup.js","templates/app.js","templates/comments.js","js/blog.js","js/views/app.js","js/blog-mvc.js"],"sourcesContent":["var AppTemplates = {};\n","AppTemplates['app'] = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    return \"<div class=\\\"full\\\">\\n\t<div class=\\\"area\\\">\\n\t\t<textarea>Join the discussion...</textarea>\\n\t</div>\\n\t<div class=\\\"button\\\">\\n\t\t<button>Comment</button>\\n\t</div>\\n</div>\\n\";\n},\"useData\":true});","AppTemplates['comments'] = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    return \"<div class=\\\"above\\\">\\n\t<span>Text Goes Here</span>\\n\t<button>Comment</button>\\n</div>\\n\";\n},\"useData\":true});","var Comment = Backbone.Model.extend({\n  idAttribute: '_id',\n  defaults: {\n    title: '',\n    done: false\n  }\n});\n\nvar CommentList = Backbone.Collection.extend({\n  model: Comment,\n\n  //to sync with a server, add url to collection\n  url: 'http://tiny-lr.herokuapp.com/collections/jc-comments'\n});\n","var CommentView = Backbone.View.extend({\n  // a view will create html off the page\n  // what kind of element should I make?\n  tagName: 'li',\n  template: AppTemplates.app,\n\n  //will be called when the view is first created\n  initialize: function() {\n    this.listenTo(this.model, 'change', this.render);\n  },\n\n  // events - things I want to listen for\n  events: {\n    'change .toggle': 'toggleDone',\n    'click .destroy': 'burnItWithFire'\n  },\n\n  render: function() {\n    var html = this.template(this.model.toJSON());\n    this.$el.html(html);\n    this.$el.toggleClass('completed', this.model.get('done'));\n    return this;\n  },\n\n  // model is all of the underlying data\n\n  toggleDone: function() {\n    this.model.set('done', !this.model.get('done'));\n    this.model.save();\n  },\n\n  burnItWithFire: function() {\n    var _this = this;\n    this.$el.slideUp(function() {\n      _this.model.destroy();\n      _this.remove();\n    });\n  }\n});\n\nvar AppView = Backbone.View.extend({\n  template: AppTemplates.app,\n\n  el: '.comments',\n\n  initialize: function() {\n    this.listenTo(this.collection, 'add reset sync', this.render);\n\n    this.render();\n    this.collection.fetch();\n  },\n\n  events: {\n    'submit form': 'addComment',\n    'change .toggle': 'markDone'\n  },\n\n  render: function() {\n    var html = this.template(this.collection);\n    var _this = this;\n\n    this.$el.html(html);\n    this.collection.sortBy('done').forEach(function(todo) {\n      var childView = new CommentView({model: todo});\n\n      _this.$el.find('.todo-list')\n        .append(childView.render().$el);\n    });\n\n    console.info('render');\n\n    this.$('.new-comment').focus();\n    return this;\n  },\n\n  addTodo: function(ev) {\n    ev.preventDefault();\n\n    var title = this.$el.find('input').val();\n    this.collection.create({title: title});\n    this.$el.find('input').val('');\n  }\n\n});\n","var comments = new CommentList();\nvar app = new AppView({collection: comments});\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;;ACDA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnFA;AACA;","file":"app.js"}